{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lelic\\\\Desktop\\\\Zavrsniprojekat\\\\frontend\\\\src\\\\BookHotelContext.js\",\n    _s = $RefreshSig$();\n\nimport { format } from \"date-fns\";\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport AuthContext from \"./AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookHotelContext = /*#__PURE__*/createContext();\nexport default BookHotelContext;\nexport const BookHotelProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  let [checkin, setCheckin] = useState(new Date());\n  let [checkout, setCheckout] = useState(new Date());\n  let url = window.location.href;\n  let {\n    user\n  } = useContext(AuthContext);\n  let params = url.substring(url.length - 1);\n  let cooki = document.cookie;\n  let seperate = cooki.split('=');\n  const csrfToken = seperate[1];\n  const [bookedDates, setBookedDates] = useState([]);\n  let roomAlreadyBooked;\n\n  const bookHotelDate = async e => {\n    e.preventDefault();\n    const api = await fetch('/api/reserv/', {\n      method: 'POST',\n      headers: {\n        \"X-CSRFToken\": csrfToken,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"checkin\": format(checkin, 'yyyy-MM-dd'),\n        \"checkout\": format(checkout, 'yyyy-MM-dd'),\n        \"current_user\": user.user_id,\n        \"current_hotel\": parseInt(params)\n      })\n    });\n\n    if (api.status === 200) {\n      alert('You have successfully booked the date');\n    } else {\n      alert('Room booked already');\n    }\n  };\n\n  const request = async () => {\n    const getApi = await fetch('/api/allres');\n    let data = await getApi.json();\n    setBookedDates(data);\n  };\n\n  useEffect(() => {\n    request();\n  }, []);\n  let filteredDates;\n  let oneDate;\n  let numCardItems;\n  let disabledDays;\n\n  if (user && parseInt(params)) {\n    filteredDates = bookedDates.filter(each => each.current_user === user.user_id && each.current_hotel === parseInt(params));\n    oneDate = filteredDates[0];\n  }\n\n  if (user) {\n    numCardItems = bookedDates.filter(each => each.current_user === user.user_id);\n  }\n\n  if (user && parseInt(params)) {\n    disabledDays = bookedDates.filter(each => each.current_user !== user.user_id);\n  }\n\n  let bookingData = {\n    checkin: checkin,\n    setCheckin: setCheckin,\n    checkout: checkout,\n    setCheckout: setCheckout,\n    bookHotelDate: bookHotelDate,\n    oneDate: oneDate,\n    numCardItems: numCardItems,\n    roomAlreadyBooked\n  };\n  return /*#__PURE__*/_jsxDEV(BookHotelContext.Provider, {\n    value: bookingData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BookHotelProvider, \"BhLqGg7o/MBE0VQXXvnFojLGi9s=\");\n\n_c = BookHotelProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookHotelProvider\");","map":{"version":3,"names":["format","createContext","useContext","useEffect","useState","useParams","AuthContext","BookHotelContext","BookHotelProvider","children","checkin","setCheckin","Date","checkout","setCheckout","url","window","location","href","user","params","substring","length","cooki","document","cookie","seperate","split","csrfToken","bookedDates","setBookedDates","roomAlreadyBooked","bookHotelDate","e","preventDefault","api","fetch","method","headers","body","JSON","stringify","user_id","parseInt","status","alert","request","getApi","data","json","filteredDates","oneDate","numCardItems","disabledDays","filter","each","current_user","current_hotel","bookingData"],"sources":["C:/Users/lelic/Desktop/Zavrsniprojekat/frontend/src/BookHotelContext.js"],"sourcesContent":["import { format } from \"date-fns\";\r\nimport { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport AuthContext from \"./AuthContext\";\r\nconst BookHotelContext = createContext();\r\nexport default BookHotelContext;\r\nexport const BookHotelProvider = ({children}) => {\r\n    let [checkin, setCheckin] = useState(new Date());\r\n    let [checkout, setCheckout] = useState(new Date());\r\n    let url = window.location.href\r\n    \r\n\r\n    let { user } =  useContext(AuthContext)\r\n    let params = url.substring(url.length - 1)\r\n    let cooki = document.cookie\r\n    let seperate = cooki.split('=')\r\n    const csrfToken = seperate[1]\r\n    const [bookedDates,setBookedDates] = useState([])\r\n    let roomAlreadyBooked;\r\n    const bookHotelDate = async(e) => {\r\n        e.preventDefault()\r\n        const api = await fetch('/api/reserv/',{\r\n            method:'POST',\r\n            headers: {\r\n                \"X-CSRFToken\": csrfToken,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body:JSON.stringify(\r\n                {\r\n                    \"checkin\":format(checkin, 'yyyy-MM-dd'),\r\n                    \"checkout\":format(checkout, 'yyyy-MM-dd'),\r\n                    \"current_user\": user.user_id ,\r\n                    \"current_hotel\": parseInt(params)\r\n                }\r\n                )\r\n        })\r\n        \r\n       \r\n        if (api.status === 200){\r\n            alert('You have successfully booked the date')\r\n        }\r\n        else {\r\n            alert('Room booked already')\r\n        }\r\n    }\r\n    const request = async() => {\r\n        const getApi = await fetch('/api/allres')\r\n        let data =  await getApi.json()\r\n        setBookedDates(data)\r\n    }\r\n    useEffect(() => {\r\n        request()\r\n    },[])\r\n    let filteredDates;\r\n    let oneDate;\r\n    let numCardItems;\r\n    let disabledDays;\r\n    if(user && parseInt(params) ){\r\n        filteredDates = bookedDates.filter(each => each.current_user ===   user.user_id   && each.current_hotel === parseInt(params))\r\n        oneDate = filteredDates[0]\r\n    }\r\n    if(user){\r\n        numCardItems = bookedDates.filter(each => each.current_user ===   user.user_id)\r\n    }\r\n    if(user && parseInt(params))\r\n    {\r\n        disabledDays = bookedDates.filter(each => each.current_user !==   user.user_id )\r\n    }\r\n    \r\n\r\n    let bookingData = {\r\n        checkin:checkin,\r\n        setCheckin:setCheckin,\r\n        checkout:checkout,\r\n        setCheckout:setCheckout,\r\n        bookHotelDate:bookHotelDate,\r\n        oneDate:oneDate,\r\n        numCardItems:numCardItems,\r\n        roomAlreadyBooked\r\n    }\r\n  \r\n    return (\r\n        <BookHotelContext.Provider value={bookingData}>\r\n              { children }\r\n        </BookHotelContext.Provider>\r\n        \r\n        )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}